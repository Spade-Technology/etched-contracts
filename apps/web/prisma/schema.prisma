generator client {
    provider        = "prisma-client-js"
    previewFeatures = []
}

enum ApprovedStatus {
    Pending
    Approved
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_PRISMA_URL") // uses connection pooling
    directUrl         = env("DATABASE_URL") // uses a direct connection
    shadowDatabaseUrl = env("DATABASE_URL_NON_POOLING") // used for migrations
}

model User {
    address String  @id @unique
    email   String?

    isApproved ApprovedStatus @default(Pending)

    userActivationCodes userActivationCode[]
    isAdministrator     Boolean              @default(false)

    capacityCredits        capacityCredit[]
    etchedCreditsRemaining Int?             @default(0)
}

model Subscriber {
    email String @id @unique

    company    String?
    subscribed Boolean @default(true)

    subscribedAt DateTime @default(now())
}

model userActivationCode {
    id String @id @default(uuid())

    code       String
    expiration DateTime

    activatedBy User? @relation(fields: [userAddress], references: [address])

    userAddress String?
}

model capacityCredit {
    id String @id @default(uuid())

    capacityTokenId           String
    creditAmountPerKilosecond Int
    expiration                DateTime

    createdAt DateTime @default(now())

    receiver    User?   @relation(fields: [userAddress], references: [address])
    userAddress String?
}
